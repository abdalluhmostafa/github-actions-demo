name: Node.js prod

on:
  push:



jobs:
  testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout my code
        uses: actions/checkout@v3

      - name: Set up Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: npm

      - name: Install dependencies
        run: npm ci

      # Optional: If you have a build step, leave this; otherwise, it can be removed.
      - name: Build the app
        run: npm run build --if-present


      - name: Run tests
        run: npm test


  build-and-push:
    runs-on: ubuntu-latest
    needs: testing
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/demo-image:${{github.sha}}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:

      - name: Check out code
        uses: actions/checkout@v3

      - name: Auth GCP using workload identity
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: "projects/70899643201/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "github-actions@devops-431916.iam.gserviceaccount.com"
      - name: Auth GKE cluster
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: 'prod-cluster'
          location: 'us-central1-c'

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash


      # - name: Deploy using Helm
      #   run: helm upgrade --install my-release ./helm-chart --namespace my-namespace

      # - name: Install kubectl
      #   run: |
      #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      #     chmod +x kubectl
      #     sudo mv kubectl /usr/local/bin/

      - name: get pod 
        run: kubectl get ns
